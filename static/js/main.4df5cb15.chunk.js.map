{"version":3,"sources":["components/ListarTipoFlores.jsx","types/type.js","components/ModalButton.jsx","hooks/useForm.js","actions/ActionTipoFlor.js","reducers/TipoFlorReducer.js","reducers/index.js","store/Store.js","App.js","index.js"],"names":["ContainerTipoFlor","styled","Container","ListarTipoFlores","listaTipoFLor","useSelector","state","tipoFlor","console","log","Row","map","flor","Col","xs","nombre","Image","src","url","alt","style","width","precio","descripcion","id","types","DivModal","div","ModalButton","useState","show","setShow","handleClose","initialState","formValue","setValues","target","name","value","useForm","handleInputChange","reset","dispatch","useDispatch","AgregarTipoFlor","type","payload","ActionTipoFlor","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","e","preventDefault","uuid","Group","className","Label","Control","placeholder","autoComplete","onChange","as","rows","Footer","combineReducers","action","filter","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4df5cb15.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Container, Row, Col, Image } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst ContainerTipoFlor = styled(Container)`\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    width: 80%;\r\n`\r\n\r\nconst ListarTipoFlores = () => {\r\n\r\n    const listaTipoFLor = useSelector((state) => state.tipoFlor)\r\n\r\n    console.log(listaTipoFLor.tipoFlor);\r\n\r\n    return (\r\n            <ContainerTipoFlor>\r\n                <Row>\r\n                    {\r\n                        listaTipoFLor.tipoFlor.map(flor => (\r\n                            <Col xs = {4} key={flor.id}>\r\n                                <p>{flor.nombre}</p>\r\n                                <Image src={flor.url} alt={flor.nombre} style={{width: '100%'}} />\r\n                                <p>{flor.precio}</p>\r\n                                <p>{flor.descripcion}</p>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Row>\r\n            </ContainerTipoFlor>\r\n    )\r\n}\r\n\r\nexport default ListarTipoFlores\r\n","export const types = {\r\n    agregar: 'AGREGAR_TIPO_FLOR',\r\n    borrar: 'BORRAR_TIPO_FLOR'\r\n}","import React, { useState } from 'react'\r\nimport { Button, Modal, Form } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux';\r\nimport { ActionTipoFlor } from '../actions/ActionTipoFlor';\r\nimport { useForm } from '../hooks/useForm';\r\nimport uuid from 'react-uuid'\r\nimport styled from 'styled-components'\r\n\r\nconst DivModal = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 20px;\r\n`\r\n\r\nconst ModalButton = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [formValue, handleInputChange, reset] = useForm ({\r\n        nombre: '',\r\n        url: '',\r\n        precio: '',\r\n        descripcion: ''\r\n    })\r\n\r\n    const { nombre, url, precio, descripcion } = formValue\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const AgregarTipoFlor = flor => {\r\n        dispatch(ActionTipoFlor(flor))\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        AgregarTipoFlor ({\r\n            id: uuid(),\r\n            nombre,\r\n            url,\r\n            precio,\r\n            descripcion\r\n        })\r\n\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <DivModal>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Añade tu Tipo Flor\r\n            </Button>\r\n\r\n            <hr style={{width: '100%'}} />\r\n\r\n            <p>Aqui se mostraran tus flores</p>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Ingresa Tipo Flor</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Tipo Flor</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\"\r\n                                placeholder=\"Nombre TipoFlor\" \r\n                                name=\"nombre\"\r\n                                autoComplete=\"off\"\r\n                                value={nombre}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Imagen Tipo Flor (URL)</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\"\r\n                                placeholder=\"Imagen TipoFlor\"\r\n                                name=\"url\"\r\n                                autoComplete=\"off\"\r\n                                value={url}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Precio Tipo Flor</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\"\r\n                                placeholder=\"Precio TipoFlor\"\r\n                                name=\"precio\"\r\n                                autoComplete=\"off\"\r\n                                value={precio}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Descripcion Tipo Flor</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"descripcion\"\r\n                                autoComplete=\"off\"\r\n                                value={descripcion}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Añadir TipoFlor\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </DivModal>\r\n    )\r\n}\r\n\r\nexport default ModalButton\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [formValue, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...formValue,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [formValue, handleInputChange, reset];\r\n}","import { types } from \"../types/type\";\r\n\r\nexport const ActionTipoFlor = flor => {\r\n    return {\r\n        type: types.agregar,\r\n        payload: flor\r\n    }\r\n}\r\n\r\nexport const BorrarActionTipoFlor = id => {\r\n    return {\r\n        type: types.borrar,\r\n        payload: id\r\n    }\r\n}","import { types } from \"../types/type\";\r\n\r\nconst initialState = {\r\n    tipoFlor: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.agregar:\r\n            return {\r\n                ...state,\r\n                tipoFlor: [...state.tipoFlor, action.payload]\r\n            }\r\n        case types.borrar:\r\n            return {\r\n                ...state,\r\n                tipoFlor: state.tipoFlor.filter(flor => flor.id !== action.payload)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport TipoFlorReducer from \"./TipoFlorReducer\";\r\n\r\nexport default combineReducers({\r\n    tipoFlor: TipoFlorReducer\r\n})","import { createStore } from \"redux\";\r\nimport reducer from \"../reducers\";\r\n\r\n\r\nconst store = createStore (\r\n    reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store","import React from 'react'\nimport { Provider } from 'react-redux';\nimport ListarTipoFlores from './components/ListarTipoFlores';\nimport ModalButton from './components/ModalButton'\nimport store from './store/Store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ModalButton />\n      <ListarTipoFlores />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/main.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}