{"version":3,"sources":["components/ListarTipoFlores.jsx","types/type.js","components/ModalButton.jsx","hooks/useForm.js","actions/ActionTipoFlor.js","reducers/TipoFlorReducer.js","reducers/index.js","store/Store.js","App.js","index.js"],"names":["ListarTipoFlores","listaTipoFLor","useSelector","state","tipoFlor","console","log","types","ModalButton","useState","show","setShow","handleClose","initialState","formValue","setValues","target","name","value","useForm","nombre","url","precio","descripcion","handleInputChange","reset","dispatch","useDispatch","AgregarTipoFlor","flor","type","payload","ActionTipoFlor","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","e","preventDefault","id","uuid","Group","className","Label","Control","placeholder","autoComplete","onChange","as","rows","Footer","combineReducers","action","filter","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22ee170c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst ListarTipoFlores = () => {\r\n\r\n    const listaTipoFLor = useSelector((state) => state.tipoFlor)\r\n\r\n    console.log(listaTipoFLor);\r\n\r\n    return (\r\n        <div>\r\n            hola\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListarTipoFlores\r\n","export const types = {\r\n    agregar: 'AGREGAR_TIPO_FLOR',\r\n    borrar: 'BORRAR_TIPO_FLOR'\r\n}","import React, { useState } from 'react'\r\nimport { Button, Modal, Form } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux';\r\nimport { ActionTipoFlor } from '../actions/ActionTipoFlor';\r\nimport { useForm } from '../hooks/useForm';\r\nimport uuid from 'react-uuid'\r\n\r\n\r\n\r\nconst ModalButton = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [formValue, handleInputChange, reset] = useForm ({\r\n        nombre: '',\r\n        url: '',\r\n        precio: '',\r\n        descripcion: ''\r\n    })\r\n\r\n    const { nombre, url, precio, descripcion } = formValue\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const AgregarTipoFlor = flor => {\r\n        dispatch(ActionTipoFlor(flor))\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        AgregarTipoFlor ({\r\n            id: uuid(),\r\n            nombre,\r\n            url,\r\n            precio,\r\n            descripcion\r\n        })\r\n\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Launch demo modal\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Ingresa Tipo Flor</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Tipo Flor</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\"\r\n                                placeholder=\"Nombre TipoFlor\" \r\n                                name=\"nombre\"\r\n                                autoComplete=\"off\"\r\n                                value={nombre}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Imagen Tipo Flor (URL)</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\"\r\n                                placeholder=\"Imagen TipoFlor\"\r\n                                name=\"url\"\r\n                                autoComplete=\"off\"\r\n                                value={url}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Precio Tipo Flor</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\"\r\n                                placeholder=\"Precio TipoFlor\"\r\n                                name=\"precio\"\r\n                                autoComplete=\"off\"\r\n                                value={precio}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Descripcion Tipo Flor</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"descripcion\"\r\n                                autoComplete=\"off\"\r\n                                value={descripcion}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            AÃ±adir TipoFlor\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalButton\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [formValue, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...formValue,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [formValue, handleInputChange, reset];\r\n}","import { types } from \"../types/type\";\r\n\r\nexport const ActionTipoFlor = flor => {\r\n    return {\r\n        type: types.agregar,\r\n        payload: flor\r\n    }\r\n}\r\n\r\nexport const BorrarActionTipoFlor = id => {\r\n    return {\r\n        type: types.borrar,\r\n        payload: id\r\n    }\r\n}","import { types } from \"../types/type\";\r\n\r\nconst initialState = {\r\n    tipoFlor: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.agregar:\r\n            return {\r\n                ...state,\r\n                tipoFlor: [...state.tipoFlor, action.payload]\r\n            }\r\n        case types.borrar:\r\n            return {\r\n                ...state,\r\n                tipoFlor: state.tipoFlor.filter(flor => flor.id !== action.payload)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport TipoFlorReducer from \"./TipoFlorReducer\";\r\n\r\nexport default combineReducers({\r\n    tipoFlor: TipoFlorReducer\r\n})","import { createStore } from \"redux\";\r\nimport reducer from \"../reducers\";\r\n\r\n\r\nconst store = createStore (\r\n    reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store","import React from 'react'\nimport { Provider } from 'react-redux';\nimport ListarTipoFlores from './components/ListarTipoFlores';\nimport ModalButton from './components/ModalButton'\nimport store from './store/Store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ModalButton />\n      <ListarTipoFlores />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}